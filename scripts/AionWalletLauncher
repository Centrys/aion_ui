#!/bin/bash -il

# get the directory of the currently executing script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

SCRIPT_PATH="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
echo "Located script directory: ${SCRIPT_PATH}"
cd ${SCRIPT_PATH}

JAVA_VERSION=11.0.1
STORAGE_DIR=${HOME}/.aion
LOG_DIR=${STORAGE_DIR}/log
JAVA_INSTALL=${STORAGE_DIR}/java
JAVA_CMD=${JAVA_INSTALL}/bin/java

if [ ! -f ${JAVA_CMD} ] || [ $(${JAVA_CMD} -version 2>&1 | grep "${JAVA_VERSION}" | wc -l) -lt 1 ]; then
  echo "Could not find Java Install directory. Creating it now ..."
  mkdir -p ${JAVA_INSTALL}
  echo "Unzipping packaged JRE ..."
  unzip java.zip -d ${STORAGE_DIR}
fi

LEDGER=${SCRIPT_PATH}/native/mac/ledger
HID=${LEDGER}/hid
PATH=$PATH:${HID}/node-v8.11.4-darwin-x64/bin
if [ ! -d ${HID} ]; then
  echo "HID driver not installed. Installing it now ..."
  
  pushd ${LEDGER}
  echo "Entered the ledger directory $(pwd)"

  echo "Extracting the HID driver ..."
  tar -xzf hid.tar.gz
  
  pushd ${HID}
  echo "Entered the hid dirver directory $(pwd)"

  echo "Installing npm dependencies"
  npm install
  npm i -g npm 
  npm rebuild usb_bindings --update-binary
  echo "In the driver directory $(pwd)"
  pwd
  popd
  popd
  echo "Back in the binary directory $(pwd)"

  open -a AionWallet
else
  # run the program
  LIB_DIR=$(cd ../Java && pwd)/*
  mkdir -p ${LOG_DIR}
  ${JAVA_CMD} -cp "${LIB_DIR}" -Dlocal.storage.dir=${STORAGE_DIR} -Xms300m -Xmx500m org.aion.wallet.WalletApplication &> ${LOG_DIR}/log
fi

